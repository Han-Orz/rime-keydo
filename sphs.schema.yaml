# 键道·我流@SPHS默认设置
# encoding: utf-8

# 输入方案概要
schema:
  schema_id: sphs # 方案识别名称（用于代码引用）
  name: 键道·我流 # 方案显示名称（用于方案切换菜单）
  version: "1.0" # 版本号
  author: # 方案作者（在Rime中勾选方案时会予以显示）
    - 奠基者 - 大牛（吅吅大山）
    - 求道者 - SPHS
  description: | # 方案描述（在Rime中勾选方案时会予以显示）
    「键道·我流」是一款脱胎于「星空键道」的音形码顶功输入方案。

    该方案基于Colemak-DH Matrix布局，并对简码及词库进行了大幅优化。


# 候选项菜单
menu:
  page_size: 2 # 候选项显示个数


layout:
  topup:
    topup_this: "bcdefghjklmnpqrstwxyz"
    topup_with: "avuio;"

  algebra:
    - derive/^[bcdefghjklmnpqrstwxyz;]([bcdefghjklmnpqrstwxyz;][avuio].*)$/`$1/
    - derive/^([bcdefghjklmnpqrstwxyz;])[bcdefghjklmnpqrstwxyz;]([avuio].*)$/$1`$2/
    - derive/^([bcdefghjklmnpqrstwxyz;`]{2})[avuio](.*)$/$1`$2/
    - derive/^([bcdefghjklmnpqrstwxyz;`]{2}[avuio`]).(.*)$/$1`$2/
    - derive/^([bcdefghjklmnpqrstwxyz;`]{2}[avuio`]{2}).(.*)$/$1`$2/
    - derive/^([bcdefghjklmnpqrstwxyz;`]{2}[avuio`]{3}).(.*)$/$1`$2/
    - derive/^([bcdefghjklmnpqrstwxyz;`]{2}[avuio`]{4}).(.*)$/$1`$2/
    - derive/^([bcdefghjklmnpqrstwxyz;`]{2}[avuio`]{5}).$/$1`/
    - derive/^[bcdefghjklmnpqrstwxyz;]{2}([avuio`]*)$/``$1/

  patterns:
    special: "^(?:;?[avuio])[a-z]{0,}"


# 模式切换开关
switches:
  - { name: ascii_mode, reset: 0 } # 中英文切换（默认中文）
  - { name: extended_charset, reset: 1 } # CJK字符集切换（默认全字符集）
  - { name: full_shape, reset: 0 } # 全角半角切换（默认半角）
  - { name: jffh, reset: 0 } # 简繁切换（默认简体）
  - { name: emoji_cn, reset: 0 } # 表情转换（默认不转换）


# 标点符号
punctuator:
  import_preset: sphs.punct # 导入标点符号配置


# 输入方案引擎
engine:
  processors:
    - ascii_composer
    - recognizer
    - key_binder
    - lua_processor@topup_processor
    - lua_processor@sphs_select_processor
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - history_translator@repeat_history
    - table_translator@custom_phrase
    - table_translator@char_lookup
    - lua_translator@date_translator
    - lua_translator@time_translator
    - lua_translator@number_translator
  filters:
    - uniquifier
    - lua_filter@sphs_cand_filter
    - simplifier@jffh
    - simplifier@emoji_cn
    - reverse_lookup_filter@char_lookup


speller:
  algebra:
    __include: "layout/algebra"
  auto_select: true
  auto_select_unique_candidate: true
  alphabet: "zyxwvutsrqponmlkjihgfedcba;/=`"
  initials: "abcdefghijklmnopqrstuvwxyz;/=`"


translator:
  dictionary: sphs
  enable_charset_filter: false
  enable_completion: true
  enable_encoder: true
  enable_sentence: false
  enable_user_dict: false
  encode_commit_history: true
  max_phrase_length: 6


repeat_history:
  input: /
  size: 100
  initial_quality: 10000


jffh:
  opencc_config: s2tw.json
  option_name: jffh


emoji_cn:
  opencc_config: emoji.json
  option_name: emoji_cn
  tips: all


char_lookup:
  dictionary: sphs
  tags: [ char_lookup ]
  overwrite_comment: true
  enable_charset_filter: false
  enable_completion: true
  enable_encoder: false
  enable_sentence: false
  enable_user_dict: false
  encode_commit_history: false
  comment_format:
    - xform/~[a-z;]+//


custom_phrase:
  dictionary: ""
  user_dict: user_dict
  db_class: stabledb
  enable_sentence: false
  initial_quality: 0


key_binder:
  bindings:
    - { when: has_menu, accept: F1, toggle: emoji_cn}
    - { when: has_menu, accept: F2, toggle: jffh }


recognizer:
  patterns:
    char_lookup: "[a-z`]*`+[a-z`]*"
    email: "^[a-z][-_.0-9a-z]*@.*$"
    uppercase: "[A-Z][-_+.'0-9A-Za-z]*$"
    pinyin: "(?<![`A-Z])`[a-z']*;?$"
    url: "^(www[.]|https?:|ftp:|mailto:).*$"
    english: "^'[A-Z|a-z]*'?$"
    calc: "^=[^;']+$"


topup:
  __include: "layout/topup"
  min_length: 4
  max_length: 6
  auto_clear: true
  min_length_danzi: 2
  topup_command: true
